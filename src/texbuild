
#texbuild
#version: 0.1
#author: ROCHA, Rodrigo Caetano

VERBOSE=false
FILENAME=""


function usage(){
	echo "Usage: $0 [OPTIONS] DOCNAME"
	echo -e "\tDOCNAME is the name of the main TeX file in which the document environment is defined."
	echo ""
	echo "OPTIONS:"
	echo -e " --help\t\t\tdisplay this help and exit"
	echo -e " -v\t\t\tverbose mode"

	exit 0
}

function processArguments(){
	for ARG in $*; do
		if [ "$ARG" == "-v" ]; then
			VERBOSE=true
		elif [ "$ARG" == "--help" ]; then
			usage
		elif [ "$ARG" == "--repack" ]; then
			repack
		fi
		FILENAME=$ARG
	done
}

function startEnvironment(){
	rm -f -r ./bin/*
	mkdir -p ./.textbuild-tmp
	cp -r ./packages/* ./.textbuild-tmp/
	cp -r ./src/* ./.textbuild-tmp/
	cd ./.textbuild-tmp
}

function repack(){
	mkdir -p ./bin/src
	rm -f -r ./bin/src/*
	cp -r ./packages/* ./bin/src/
	cp -r ./src/* ./bin/src/
	exit 0
}

function finishEnvironment(){
	cd ..
	if [ "$VERBOSE" == "false" ]; then
		python $TEXBUILDER_HOME/readlog.py ./.textbuild-tmp/output.tmp.log
	fi
	rm -r ./.textbuild-tmp
}

function compile(){
	if $VERBOSE; then
		pdflatex -halt-on-error -file-line-error -interaction=nonstopmode $FILENAME
	else
		pdflatex -halt-on-error -file-line-error -interaction=nonstopmode $FILENAME > output.tmp.log
	fi
	if [ $? -eq 0 ]; then
		if $VERBOSE; then
			bibtex $FILENAME
			pdflatex -interaction=nonstopmode $FILENAME
			bibtex $FILENAME
			pdflatex -interaction=nonstopmode $FILENAME
			pdflatex -interaction=nonstopmode $FILENAME
			pdflatex -interaction=nonstopmode $FILENAME
		else
			bibtex $FILENAME > output.tmp.log
			pdflatex -interaction=nonstopmode $FILENAME > output.tmp.log
			bibtex $FILENAME > output.tmp.log
			pdflatex -interaction=nonstopmode $FILENAME > output.tmp.log
			pdflatex -interaction=nonstopmode $FILENAME > output.tmp.log
			pdflatex -interaction=nonstopmode $FILENAME > output.tmp.log
		fi		
		cp ./$FILENAME.pdf ../bin/
		echo $FILENAME.pdf "has been created"
	else
		echo "ERRORS:"
	fi
}

function main(){
	if [ $# -eq 0 ]; then
		#echo "No arguments supplied"
		if [ -f ".project" ]; then
			cat ".project"
		else
			echo "No TeX project found."
			usage
		fi
	else
		processArguments $*
		startEnvironment
		compile
		finishEnvironment
	fi
}

main $*
